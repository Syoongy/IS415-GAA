---
title: "Hands-on Exercise 2: Thematic Mapping and GeoVisualisation"
author: "Fan Syong Yue"
date: 08/24/24
date-modified: "last-modified"
execute:
  eval: true
  echo: true
  freeze: true
---

# Overview

------------------------------------------------------------------------

Thematic mapping utilises map symbols to highlight geographic features that are not naturally visible. Examples include population, temperature and crime rate.

Geovisualisation, however, uses graphics to make a place, phenomenon, or process visible, tapping into our powerful spatial cognition and eye-brain vision system.

We will learn more about how to plot functional and truthful choropleth maps using the `tmap` package.

------------------------------------------------------------------------

# Setup

------------------------------------------------------------------------

## Packages

We will be using the following packages aside from `tmap`

-   tidyverse
    -   readr - importing delimited text files
    -   tidyr - tidying data
    -   dplyr - wrangling data
-   sf - handling geospatial data

```{r}
pacman::p_load(sf,tmap,tidyverse)
```

## Data

The following datasets will be used

-   [Master Plan 2014 Subzone Boundary Data](https://beta.data.gov.sg/datasets/d_d14da225fccf921049ab64238ff473d9/view)
-   [Singapore Residents by Planning Are / Subzone, Age Group, Sex, and Dwelling](https://www.singstat.gov.sg/-/media/files/find_data/population/statistical_tables/respopagesextod2011to2020.ashx)

We first use `st_read()` to import the geospatial data into a variable called `mpsz`

```{r}
mpsz <- st_read(dsn = "data/geospatial", layer = "MP14_SUBZONE_WEB_PL")
```
```{r}
mpsz
```

We now import the aspatial data in an R dataframe `popdata`
```{r}
popdata <- read_csv("data/aspatial/respopagesextod2011to2020.csv")
```
## Data Preparation
We first want to prepare a data table with year 2020 values with the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY.

-   YOUNG: Age groups 0-4 until 20-24

-   ECONOMY ACTIVE: Age groups 25-29 until 60-64

-   AGED: Age group 65+

-   TOTAL: All age groups

-   DEPENDENCY: ratio between the YOUNG and AGED ages groups against the ECONOMY ACTIVE age group

### Data Wrangling
We will now use `pivot_wider()` from `tidyr` along with `mutate()`, `filter()`, `group_by()` and `select()` from `dplyr`

```{r}
popdata2020 <- popdata %>%
  filter(Time == 2020) %>%
  group_by(PA, SZ, AG) %>%
  summarise(`POP` = sum(`Pop`)) %>%
  ungroup() %>%
  pivot_wider(names_from = AG, values_from = POP) %>%
  mutate(`YOUNG` = rowSums(.[3:6]) + rowSums(.[14])) %>%
  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+rowSums(.[15])) %>%
  mutate(`AGED` = rowSums(.[16:21])) %>%
  mutate(`TOTAL` = rowSums(.[3:21])) %>%
  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %>%
  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, `AGED`, `TOTAL`, `DEPENDENCY`)
```

### Joining attribute and geospatial data