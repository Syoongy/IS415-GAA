{
  "hash": "116edc544268a56537aa5caabd212048",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 4\"\nauthor: \"Fan Syong Yue\"\ndate: 09/09/24\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n# Spatio-Temporal Point Patterns Analysis\n\nA spatio-temporal point process (also called space-time or spatial-temporal point process) is a random collection of points, where each point represents the time and location of an event. Examples of events include incidence of disease, sightings or births of a species, or the occurrences of fires, earthquakes, lightning strikes, tsunamis, or volcanic eruptions.\n\nIn this exercise, we would like to learn about the following questions\n\n-   are the locations of forest fire in Kepulauan Bangka Belitung spatial and spatio-temporally independent?\n-   if the answer is NO, where and when the observed forest fire locations tend to cluster?\n\n# Data\n\nWe are using 2 data sets for this exercise\n\n-   `forestfires`, a csv file provides locations of forest fire detected from the Moderate Resolution Imaging Spectroradiometer (MODIS) sensor data. The data are downloaded from Fire Information for Resource Management System. For the purpose of this exercise, only forest fires within Kepulauan Bangka Belitung will be used.\n-   `Kepulauan_Bangka_Belitung`, an ESRI shapefile showing the sub-district (i.e. kelurahan) boundary of Kepulauan Bangka Belitung. The data set was downloaded from Indonesia Geospatial portal. The original data covers the whole Indonesia. For the purpose of this exercise, only sub-districts within Kepulauan Bangka Belitung are extracted\n\n# Packages\n\nWe are using 5 packages for this exercise\n\n-   `tidyverse` - common utilities\n-   `raster` - handling raster data\n-   `spatstat` - performing Spatial Point Patterns Analysis such as kcross, Lcross, etc.\n-   `tmap` - producing cartographic quality thematic maps\n-   `sf` - data wrangling geospatial data\n-   `sparr` - estimate fixed and adaptive kernel-smoothed spatial relative risk surfaces via the density-ratio method and perform subsequent inference. Fixed-bandwidth spatiotermporal densirt and relative risk estimation is also supported\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tmap, tidyverse, raster, spatstat, sf, sparr)\n```\n:::\n\n\n# Data Wrangling\n\n## Study Area\n### Importing\nWe first want to import our study area\n\n::: {.cell}\n\n```{.r .cell-code}\nkbb <- st_read(dsn = \"data/rawdata\",\n               layer = \"Kepulauan_Bangka_Belitung\") %>%\n  st_transform(crs = 32748)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Kepulauan_Bangka_Belitung' from data source \n  `D:\\Coding\\is415\\IS415-GAA\\In-class_Ex\\In-class_Ex04\\data\\rawdata' \n  using driver `ESRI Shapefile'\nSimple feature collection with 298 features and 27 fields\nGeometry type: POLYGON\nDimension:     XYZ\nBounding box:  xmin: 105.1085 ymin: -3.116593 xmax: 106.8488 ymax: -1.501603\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\nWe want to remove some redundant values\n\n::: {.cell}\n\n```{.r .cell-code}\nkbb_sf <- st_read(dsn = \"data/rawdata\",\n               layer = \"Kepulauan_Bangka_Belitung\") %>%\n  st_union() %>%\n  st_zm(drop = TRUE, what = \"ZM\") %>%\n  st_transform(crs = 32748)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Kepulauan_Bangka_Belitung' from data source \n  `D:\\Coding\\is415\\IS415-GAA\\In-class_Ex\\In-class_Ex04\\data\\rawdata' \n  using driver `ESRI Shapefile'\nSimple feature collection with 298 features and 27 fields\nGeometry type: POLYGON\nDimension:     XYZ\nBounding box:  xmin: 105.1085 ymin: -3.116593 xmax: 106.8488 ymax: -1.501603\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nst_as_s2(): dropping Z and/or M coordinate\n```\n\n\n:::\n:::\n\n\n### Preparing\n#### Converting to OWIN\nWe want to convert kbb into an `owin` object\n\n::: {.cell}\n\n```{.r .cell-code}\nkbb_owin <- as.owin(kbb_sf)\nkbb_owin\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nwindow: polygonal boundary\nenclosing rectangle: [512066.8, 705559.4] x [9655398, 9834006] units\n```\n\n\n:::\n:::\n\n\nCheck if we have correctly converted the object\n\n::: {.cell}\n\n```{.r .cell-code}\nclass(kbb_owin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"owin\"\n```\n\n\n:::\n:::\n\n\n## Forest Fire Data\n### Importing\nWe now want to import the forest fire data\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_sf <- read_csv(\"data/rawdata/forestfires.csv\") %>%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"),\n           crs = 4326) %>%\n  st_transform(crs = 32748)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 741 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr   (3): satellite, instrument, daynight\ndbl  (11): latitude, longitude, brightness, scan, track, acq_time, confidenc...\ndate  (1): acq_date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n### Preparing\nAs `ppp` objects only accept numerical or characters as mark, we need to convert the `acq_date` to numeric\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_sf <- fire_sf %>%\n  mutate(DayofYear = yday(acq_date)) %>%\n  mutate(Month_num = month(acq_date)) %>%\n  mutate(Month_fac = month(acq_date,\n                          label = TRUE,\n                          abbr = FALSE))\n```\n:::\n\n## Visualising\nWe now want to visualise our data with a plot of the study area overlaid with the forest fire data\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(kbb_sf) +\n  tm_polygons() +\n  tm_shape(fire_sf) +\n  tm_dots()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\nWe also want to see how the data changes over the months\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(kbb_sf) +\n  tm_polygons() +\n  tm_shape(fire_sf) +\n  tm_dots(size = 0.1) +\n  tm_facets(by=\"Month_fac\",\n              free.coords = FALSE,\n              drop.units = TRUE)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n# Computing STKDE\nwe will be computing STKDE by using ``\n## By Month\n### Extracting forest fires by month\nWe first want to only select the month from the `fire_sf` variable\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_month <- fire_sf %>%\n  dplyr::select(Month_num)\n```\n:::\n\n### Creating ppp\nWe now want to convert this into `ppp`\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_month_ppp <- as.ppp(fire_month)\nfire_month_ppp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern: 741 points\nmarks are numeric, of storage type  'double'\nwindow: rectangle = [521564.1, 695791] x [9658137, 9828767] units\n```\n\n\n:::\n:::\n\n\n### Including Owin object\nWe also want to have an `owin` object\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_month_owin <- fire_month_ppp[kbb_owin]\nsummary(fire_month_owin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern:  741 points\nAverage intensity 6.424519e-08 points per square unit\n\nCoordinates are given to 10 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  1.000   8.000   9.000   8.579  10.000  12.000 \n\nWindow: polygonal boundary\n2 separate polygons (no holes)\n           vertices        area relative.area\npolygon 1     47493 11533600000      1.00e+00\npolygon 2       256      306427      2.66e-05\nenclosing rectangle: [512066.8, 705559.4] x [9655398, 9834006] units\n                     (193500 x 178600 units)\nWindow area = 11533900000 square units\nFraction of frame area: 0.334\n```\n\n\n:::\n:::\n\n\n### Computing Spatio-temporal KDE\nWe can now use `spattemp.density()` from `sparr` to compute the STKDE\n\n::: {.cell}\n\n```{.r .cell-code}\nst_kde <- spattemp.density(fire_month_owin)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(st_kde)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 15102.47 (spatial)\n  lambda = 0.0304 (temporal)\n\nNo. of observations\n  741 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [512066.8, 705559.4] x [9655398, 9834006]\n\nTemporal bound\n  [1, 12]\n\nEvaluation\n  128 x 128 x 12 trivariate lattice\n  Density range: [1.233458e-27, 8.202976e-10]\n```\n\n\n:::\n:::\n\n\n### Plotting the STKDE object\nWe now use the base `plot()` function of R\n\n::: {.cell}\n\n```{.r .cell-code}\ntims <- c(7, 8, 9, 10, 11, 12)\npar(mfcol=c(2, 3))\nfor (i in tims) {\n  plot(st_kde, i,\n       override.par = FALSE,\n       fix.range = TRUE,\n       main=paste(\"KDE at month\", i))\n}\n```\n\n::: {.cell-output-display}\n![](In-class_Ex04_files/figure-html/unnamed-chunk-14-1.png){width=1152}\n:::\n:::\n\n\n## By Day\n### Extracting forest fires by day\nWe first want to only select the month from the `fire_sf` variable\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_yday <- fire_sf %>%\n  dplyr::select(DayofYear)\n```\n:::\n\n### Creating ppp\nWe now want to convert this into `ppp`\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_yday_ppp <- as.ppp(fire_yday)\nfire_yday_ppp\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern: 741 points\nmarks are numeric, of storage type  'double'\nwindow: rectangle = [521564.1, 695791] x [9658137, 9828767] units\n```\n\n\n:::\n:::\n\n\n### Including Owin object\nWe also want to have an `owin` object\n\n::: {.cell}\n\n```{.r .cell-code}\nfire_yday_owin <- fire_yday_ppp[kbb_owin]\nsummary(fire_yday_owin)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nMarked planar point pattern:  741 points\nAverage intensity 6.424519e-08 points per square unit\n\nCoordinates are given to 10 decimal places\n\nmarks are numeric, of type 'double'\nSummary:\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n   10.0   213.0   258.0   245.9   287.0   352.0 \n\nWindow: polygonal boundary\n2 separate polygons (no holes)\n           vertices        area relative.area\npolygon 1     47493 11533600000      1.00e+00\npolygon 2       256      306427      2.66e-05\nenclosing rectangle: [512066.8, 705559.4] x [9655398, 9834006] units\n                     (193500 x 178600 units)\nWindow area = 11533900000 square units\nFraction of frame area: 0.334\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nkde_yday <- spattemp.density(\n  fire_yday_owin)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nCalculating trivariate smooth...Done.\nEdge-correcting...Done.\nConditioning on time...Done.\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(kde_yday)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatiotemporal Kernel Density Estimate\n\nBandwidths\n  h = 15102.47 (spatial)\n  lambda = 6.3198 (temporal)\n\nNo. of observations\n  741 \n\nSpatial bound\n  Type: polygonal\n  2D enclosure: [512066.8, 705559.4] x [9655398, 9834006]\n\nTemporal bound\n  [10, 352]\n\nEvaluation\n  128 x 128 x 343 trivariate lattice\n  Density range: [3.959516e-27, 2.751287e-12]\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlength((st_kde))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 11\n```\n\n\n:::\n:::\n",
    "supporting": [
      "In-class_Ex04_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}