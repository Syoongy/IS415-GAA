{
  "hash": "d5bf555d515b4bf02ce7f3bcd0dfc48b",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 2\"\nauthor: \"Fan Syong Yue\"\ndate: 08/26/24\ndate-modified: \"last-modified\"\nexecute:\n  eval: true\n  echo: true\n  freeze: true\n---\n\n\n# Getting Started\n\nWe want to use `tidyverse` and `sf` packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sf)\n```\n:::\n\n\n# Working with 2014 Master Plan Planning Sub-zone Data\n\n## Importing the data\n\nWe want to first import the `shp` shapefile\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz14_shp <- st_read(dsn = \"data/\",\n                        layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/home/syoongy/Documents/code/SMU/is415/IS415-GAA/In-class_Ex/In-class_Ex02/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\n\nSince the original downladed KML file errors out, let's create one using the SHP file\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_write(mpsz14_shp,\n         \"data/MP14_SUBZONE_WEB_PL.kml\",\n         delete_dsn = TRUE)\n```\n:::\n\n\nWe now want to import the `kml` file\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz14_kml <- st_read(\"data/MP14_SUBZONE_WEB_PL.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `/home/syoongy/Documents/code/SMU/is415/IS415-GAA/In-class_Ex/In-class_Ex02/data/MP14_SUBZONE_WEB_PL.kml' \n  using driver `KML'\nSimple feature collection with 323 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n# Working with 2019 Master Plan Subzone Boundary (No Sea)\n\n## Importing the data\n\nWe want to first import the `shp` shapefile\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp <- st_read(dsn = \"data/\",\n        layer = \"MPSZ-2019\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MPSZ-2019' from data source \n  `/home/syoongy/Documents/code/SMU/is415/IS415-GAA/In-class_Ex/In-class_Ex02/data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nWe now want to import the `kml` file\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_kml <- st_read(\"data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `/home/syoongy/Documents/code/SMU/is415/IS415-GAA/In-class_Ex/In-class_Ex02/data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n# Handling Coordinate Systems\n\nWe want to transform our `mpsz19_shp` variable to use the EGS 3414 coordinate system instead of its original WGS 84\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp_3414 <- st_transform(mpsz19_shp, crs = 3414)\nst_crs(mpsz19_shp_3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n```\n\n\n:::\n:::\n\n\nWe now want to import and transform our Preschool data into the same EGS 3414 coordinate system\n\n\n::: {.cell}\n\n```{.r .cell-code}\npreschool_kml_3414 <- st_read(\"data/PreSchoolsLocation.kml\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `PRESCHOOLS_LOCATION' from data source \n  `/home/syoongy/Documents/code/SMU/is415/IS415-GAA/In-class_Ex/In-class_Ex02/data/PreSchoolsLocation.kml' \n  using driver `KML'\nSimple feature collection with 2290 features and 2 fields\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 103.6878 ymin: 1.247759 xmax: 103.9897 ymax: 1.462134\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(preschool_kml_3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:3414 \n  wkt:\nPROJCRS[\"SVY21 / Singapore TM\",\n    BASEGEOGCRS[\"SVY21\",\n        DATUM[\"SVY21\",\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4757]],\n    CONVERSION[\"Singapore Transverse Mercator\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",1.36666666666667,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",103.833333333333,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",1,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",28001.642,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",38744.572,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"northing (N)\",north,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"easting (E)\",east,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Cadastre, engineering survey, topographic mapping.\"],\n        AREA[\"Singapore - onshore and offshore.\"],\n        BBOX[1.13,103.59,1.47,104.07]],\n    ID[\"EPSG\",3414]]\n```\n\n\n:::\n:::\n\n\n# Working with Population Data\n\nWe first need to import the population data into a data frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata <- read_csv(\"data/respopagesextod2023.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 100928 Columns: 7\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): PA, SZ, AG, Sex, TOD\ndbl (2): Pop, Time\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\nWe now want to break the data down into their planning area, subzone and age group\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 <- popdata %>%\n  group_by(PA, SZ, AG) %>%\n  summarise(`POP`=sum(`Pop`)) %>%\n  ungroup() %>%\n  pivot_wider(names_from = AG, values_from = POP)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'PA', 'SZ'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\ncolnames(popdata2023)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"PA\"          \"SZ\"          \"0_to_4\"      \"10_to_14\"    \"15_to_19\"   \n [6] \"20_to_24\"    \"25_to_29\"    \"30_to_34\"    \"35_to_39\"    \"40_to_44\"   \n[11] \"45_to_49\"    \"50_to_54\"    \"55_to_59\"    \"5_to_9\"      \"60_to_64\"   \n[16] \"65_to_69\"    \"70_to_74\"    \"75_to_79\"    \"80_to_84\"    \"85_to_89\"   \n[21] \"90_and_Over\"\n```\n\n\n:::\n:::\n\n\n## Data processing\n\nWe now want to process and split the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 <- popdata2023 %>%\n  mutate(`YOUNG` = rowSums(.[3:6]) + rowSums(.[14])) %>%\n  mutate(`ECONOMY ACTIVE` = rowSums(.[7:13])+rowSums(.[15])) %>%\n  mutate(`AGED` = rowSums(.[16:21])) %>%\n  mutate(`TOTAL` = rowSums(.[3:21])) %>%\n  mutate(`DEPENDENCY` = (`YOUNG` + `AGED`)/`ECONOMY ACTIVE`) %>%\n  select(`PA`, `SZ`, `YOUNG`, `ECONOMY ACTIVE`, `AGED`, `TOTAL`, `DEPENDENCY`)\n```\n:::\n\n\nNow we can join `popdata2023` and `mpsz19_shp_3414`\n\n\n::: {.cell}\n\n```{.r .cell-code}\npopdata2023 <- popdata2023 %>%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = list(toupper))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz_pop2023 <- left_join(mpsz19_shp_3414, popdata2023,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\nglimpse(mpsz_pop2023)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 332\nColumns: 13\n$ SUBZONE_N        <chr> \"MARINA EAST\", \"INSTITUTION HILL\", \"ROBERTSON QUAY\", …\n$ SUBZONE_C        <chr> \"MESZ01\", \"RVSZ05\", \"SRSZ01\", \"WISZ01\", \"MUSZ02\", \"MP…\n$ PLN_AREA_N       <chr> \"MARINA EAST\", \"RIVER VALLEY\", \"SINGAPORE RIVER\", \"WE…\n$ PLN_AREA_C       <chr> \"ME\", \"RV\", \"SR\", \"WI\", \"MU\", \"MP\", \"WI\", \"WI\", \"SI\",…\n$ REGION_N         <chr> \"CENTRAL REGION\", \"CENTRAL REGION\", \"CENTRAL REGION\",…\n$ REGION_C         <chr> \"CR\", \"CR\", \"CR\", \"WR\", \"CR\", \"CR\", \"WR\", \"WR\", \"CR\",…\n$ PA               <chr> \"MARINA EAST\", \"RIVER VALLEY\", \"SINGAPORE RIVER\", \"WE…\n$ YOUNG            <dbl> 0, 1050, 1050, 0, 30, 0, 0, 0, 0, 690, 0, 0, 0, 1240,…\n$ `ECONOMY ACTIVE` <dbl> 0, 2290, 2380, 0, 140, 0, 0, 0, 0, 1470, 0, 0, 0, 280…\n$ AGED             <dbl> 0, 370, 300, 0, 10, 0, 0, 0, 0, 230, 0, 0, 0, 590, 36…\n$ TOTAL            <dbl> 0, 3710, 3730, 0, 180, 0, 0, 0, 0, 2390, 0, 0, 0, 463…\n$ DEPENDENCY       <dbl> NaN, 0.6200873, 0.5672269, NaN, 0.2857143, NaN, NaN, …\n$ geometry         <MULTIPOLYGON [m]> MULTIPOLYGON (((33222.98 29..., MULTIPOL…\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npop2023_mpsz <- left_join(popdata2023, mpsz19_shp_3414,\n                          by = c(\"SZ\" = \"SUBZONE_N\"))\nglimpse(pop2023_mpsz)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 332\nColumns: 13\n$ PA               <chr> \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO…\n$ SZ               <chr> \"ANG MO KIO TOWN CENTRE\", \"CHENG SAN\", \"CHONG BOON\", …\n$ YOUNG            <dbl> 1240, 5150, 4620, 4320, 1840, 3810, 1870, 3750, 0, 10…\n$ `ECONOMY ACTIVE` <dbl> 2830, 15600, 14120, 12400, 3670, 9600, 4320, 11090, 0…\n$ AGED             <dbl> 890, 6580, 7060, 5640, 1420, 4320, 1790, 5390, 0, 880…\n$ TOTAL            <dbl> 4960, 27330, 25800, 22360, 6930, 17730, 7980, 20230, …\n$ DEPENDENCY       <dbl> 0.7526502, 0.7519231, 0.8271955, 0.8032258, 0.8882834…\n$ SUBZONE_C        <chr> \"AMSZ01\", \"AMSZ02\", \"AMSZ03\", \"AMSZ06\", \"AMSZ07\", \"AM…\n$ PLN_AREA_N       <chr> \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO\", \"ANG MO KIO…\n$ PLN_AREA_C       <chr> \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\", \"AM\",…\n$ REGION_N         <chr> \"NORTH-EAST REGION\", \"NORTH-EAST REGION\", \"NORTH-EAST…\n$ REGION_C         <chr> \"NER\", \"NER\", \"NER\", \"NER\", \"NER\", \"NER\", \"NER\", \"NER…\n$ geometry         <MULTIPOLYGON [m]> MULTIPOLYGON (((29692.8 389..., MULTIPOL…\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}