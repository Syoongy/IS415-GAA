---
title: "In-class Exercise 4"
author: "Fan Syong Yue"
date: 09/09/24
date-modified: "last-modified"
execute:
  eval: true
  echo: true
  freeze: true
---

# Spatio-Temporal Point Patterns Analysis

A spatio-temporal point process (also called space-time or spatial-temporal point process) is a random collection of points, where each point represents the time and location of an event. Examples of events include incidence of disease, sightings or births of a species, or the occurrences of fires, earthquakes, lightning strikes, tsunamis, or volcanic eruptions.

In this exercise, we would like to learn about the following questions

-   are the locations of forest fire in Kepulauan Bangka Belitung spatial and spatio-temporally independent?
-   if the answer is NO, where and when the observed forest fire locations tend to cluster?

# Data

We are using 2 data sets for this exercise

-   `forestfires`, a csv file provides locations of forest fire detected from the Moderate Resolution Imaging Spectroradiometer (MODIS) sensor data. The data are downloaded from Fire Information for Resource Management System. For the purpose of this exercise, only forest fires within Kepulauan Bangka Belitung will be used.
-   `Kepulauan_Bangka_Belitung`, an ESRI shapefile showing the sub-district (i.e. kelurahan) boundary of Kepulauan Bangka Belitung. The data set was downloaded from Indonesia Geospatial portal. The original data covers the whole Indonesia. For the purpose of this exercise, only sub-districts within Kepulauan Bangka Belitung are extracted

# Packages

We are using 5 packages for this exercise

-   `tidyverse` - common utilities
-   `raster` - handling raster data
-   `spatstat` - performing Spatial Point Patterns Analysis such as kcross, Lcross, etc.
-   `tmap` - producing cartographic quality thematic maps
-   `sf` - data wrangling geospatial data
-   `sparr` - estimate fixed and adaptive kernel-smoothed spatial relative risk surfaces via the density-ratio method and perform subsequent inference. Fixed-bandwidth spatiotermporal densirt and relative risk estimation is also supported

```{r}
pacman::p_load(tmap, tidyverse, raster, spatstat, sf, sparr)
```

# Data Wrangling

## Study Area
### Importing
We first want to import our study area
```{r}
kbb <- st_read(dsn = "data/rawdata",
               layer = "Kepulauan_Bangka_Belitung") %>%
  st_transform(crs = 32748)
```
We want to remove some redundant values
```{r}
kbb_sf <- st_read(dsn = "data/rawdata",
               layer = "Kepulauan_Bangka_Belitung") %>%
  st_union() %>%
  st_zm(drop = TRUE, what = "ZM") %>%
  st_transform(crs = 32748)
```

### Preparing
#### Converting to OWIN
We want to convert kbb into an `owin` object
```{r}
kbb_owin <- as.owin(kbb_sf)
kbb_owin
```

Check if we have correctly converted the object
```{r}
class(kbb_owin)
```

## Forest Fire Data
### Importing
We now want to import the forest fire data
```{r}
fire_sf <- read_csv("data/rawdata/forestfires.csv") %>%
  st_as_sf(coords = c("longitude", "latitude"),
           crs = 4326) %>%
  st_transform(crs = 32748)
```
### Preparing
As `ppp` objects only accept numerical or characters as mark, we need to convert the `acq_date` to numeric

```{r}
fire_sf <- fire_sf %>%
  mutate(DayofYear = yday(acq_date)) %>%
  mutate(Month_num = month(acq_date)) %>%
  mutate(Month_fac = month(acq_date,
                          label = TRUE,
                          abbr = FALSE))
```
## Visualising
We now want to visualise our data with a plot of the study area overlaid with the forest fire data
```{r}
tm_shape(kbb_sf) +
  tm_polygons() +
  tm_shape(fire_sf) +
  tm_dots()
```
We also want to see how the data changes over the months
```{r}

tm_shape(kbb_sf) +
  tm_polygons() +
  tm_shape(fire_sf) +
  tm_dots(size = 0.1) +
  tm_facets(by="Month_fac",
              free.coords = FALSE,
              drop.units = TRUE)
```

# Computing STKDE
we will be computing STKDE by using ``
## By Month
### Extracting forest fires by month
We first want to only select the month from the `fire_sf` variable
```{r}
fire_month <- fire_sf %>%
  select(Month_num)
```
### Creating ppp
We now want to convert this into `ppp`
```{r}
fire_month_ppp <- as.ppp(fire_month)
fire_month_ppp
```

### Including Owin object
We also want to have an `owin` object
```{r}
fire_month_owin <- fire_month_ppp[kbb_owin]
summary(fire_month_owin)
```

### Computing Spatio-temporal KDE
We can now use `spattemp.density()` from `sparr` to compute the STKDE
```{r}
st_kde <- spattemp.density(fire_month_owin)
summary(st_kde)
```

### Plotting the STKDE object
We now use the base `plot()` function of R
```{r}
#| fig-width: 12
#| fig-height: 10
tims <- c(7, 8, 9, 10, 11, 12)
par(mfcol=c(2, 3))
for (i in tims) {
  plot(st_kde, i,
       override.par = FALSE,
       fix.range = TRUE,
       main=paste("KDE at month", i))
}
```

## By Day
### Extracting forest fires by day
We first want to only select the month from the `fire_sf` variable
```{r}
fire_yday <- fire_sf %>%
  select(DayofYear)
```
### Creating ppp
We now want to convert this into `ppp`
```{r}
fire_yday_ppp <- as.ppp(fire_yday)
fire_yday_ppp
```

### Including Owin object
We also want to have an `owin` object
```{r}
fire_yday_owin <- fire_yday_ppp[kbb_owin]
summary(fire_yday_owin)
```
```{r}
kde_yday <- spattemp.density(
  fire_yday_owin)
summary(kde_yday)
```
```{r}
length((stkde))
```
